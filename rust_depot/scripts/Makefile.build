# SPDX-License-Identifier: GPL-2.0

CROSS_ := riscv64-linux-gnu-

CC  := $(CROSS_)gcc
AR  := $(CROSS_)ar
LD  := $(CROSS_)ld
NM  := $(CROSS_)nm
MAKE := @make --no-print-directory

TARGET_DIR = target/$(target)/$(MODE)/deps/$(obj)

INCLUDES := -I../include/ -I$(TARGET_DIR)
CFLAGS := -nostdinc -fno-PIE -mabi=lp64d -march=rv64imafdc \
	-fno-common -fno-stack-protector -mcmodel=medany -D__KERNEL__

rust_rlib = $(TARGET_DIR)/../lib$(obj)-*.rlib
rust_obj_y = $(TARGET_DIR)/$(obj)-*.o
exports_gen_h = $(TARGET_DIR)/exports_$(obj)_generated.h
mod_lds := scripts/module.lds

include $(obj)/Makefile

obj_y := $(addprefix $(TARGET_DIR)/, $(obj_y))

_mod: $(TARGET_DIR)/$(obj).ko
	@:

$(TARGET_DIR)/$(obj).ko: $(exports_gen_h) $(rust_obj_y) $(obj_y) $(mod_lds)
	@printf "LD\t$@\n"
	@$(LD) -r $(LDFLAGS) -T $(mod_lds) -o $@ $(rust_obj_y) $(obj_y)
	@cp $@ $(KMODULE_DIR)

$(rust_obj_y): $(rust_rlib)
	@printf "AR\t$@\n"
	@$(AR) -x $(rust_rlib) --output $(TARGET_DIR)/

$(TARGET_DIR)/%.o: $(obj)/src/%.c
	@printf "CC\t$<\n"
	@$(CC) $(CFLAGS) $(CFLAGS_$(@F)) $(INCLUDES) -c -o $@ $<

$(exports_gen_h): $(rust_obj_y)
	@echo '#include <export.h>' > $@
	@$(NM) -p --defined-only $^ \
		| grep -E ' (T|R|D|B) ' \
		| cut -d ' ' -f 3 \
		| grep -v '\.' \
		| xargs -Isymbol \
		echo 'EXPORT_SYMBOL_RUST_GPL(symbol);' >> $@

.PHONY: _mod rust_obj_y
